--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v69=v2(v0(v30,16));if v19 then local v76=v5(v69,v19);v19=nil;return v76;else return v69;end end end);local function v20(v31,v32,v33) if v33 then local v70=(v31/(2^(v32-(569 -(367 + 201)))))%(2^(((v33-((1067 -(68 + 997)) -1)) -(v32-(2 -1))) + (1 -0))) ;return v70-(v70%(2 -1)) ;else local v71=(621 -((1825 -(226 + 1044)) + (91 -27)))^(v32-((1049 -(32 + 85)) -(840 + 17 + 74))) ;return (((v31%(v71 + v71))>=v71) and (1 + 0)) or 0 ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 1 + 1 );v18=v18 + (959 -(892 + 65)) ;return (v36 * (610 -354)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (353 -(64 + 23 + 263)) );v18=v18 + (184 -(67 + (449 -336))) ;return (v40 * ((12303229 -(802 + 150)) + 4474939)) + (v39 * (121138 -55602)) + (v38 * (469 -213)) + v37 ;end local function v24() local v41=0;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==0) then v42=v23();v43=v23();v41=1;end if (v41==(7 -(1751 -(760 + 987)))) then if (v46==((0 + 0) -0)) then if (v45==((1913 -(1789 + 124)) + 0)) then return v47 * (997 -(915 + 82)) ;else local v96=0 + 0 ;while true do if (v96==(0 -0)) then v46=1 + 0 ;v44=0 -(766 -(745 + 21)) ;break;end end end elseif (v46==(705 + 1342)) then return ((v45==(1187 -(1069 + 118))) and (v47 * ((2 -1)/((0 -0) -0)))) or (v47 * NaN) ;end return v8(v47,v46-(4258 -3235) ) * (v44 + (v45/((1 + 1)^(189 -(537 -400))))) ;end if (v41==(7 -(17 -12))) then v46=v20(v43,37 -16 ,31 + 0 + 0 );v47=((v20(v43,823 -(368 + 423) )==(3 -2)) and  -(19 -(10 + 8))) or (3 -2) ;v41=445 -(416 + 26) ;end if (v41==1) then v44=1;v45=(v20(v43,1081 -(1020 + 60) ,63 -(34 + 9) ) * ((1425 -(630 + 793))^((1163 -(87 + 968)) -(334 -258)))) + v42 ;v41=1 + 1 ;end end end local function v25(v48) local v49;if  not v48 then local v72=0;while true do if (v72==0) then v48=v23();if (v48==(0 + 0)) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -((5 -3) -1) );v18=v18 + v48 ;local v50={};for v67=1414 -(447 + 966) , #v49 do v50[v67]=v2(v1(v3(v49,v67,v67)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=0 + 0 ;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v51~=(1 + 0)) then else v54=nil;v55=nil;v51=1987 -(1266 + 719) ;end if (v51~=(606 -(268 + 335))) then else v58=nil;v59=nil;v51=294 -(60 + 230) ;end if (v51==2) then v56=nil;v57=nil;v51=3;end if (v51==(576 -(426 + 146))) then while true do if (v52~=(1 + 2)) then else v59=nil;while true do local v97=0;local v98;local v99;while true do if (v97~=(1456 -(282 + 1174))) then else v98=811 -(569 + 242) ;v99=nil;v97=1 + 0 ;end if (v97~=(2 -1)) then else while true do if (v98==0) then v99=0 + 0 ;while true do if (v99~=(1025 -(706 + 318))) then else if (v53==2) then local v107=1580 -(1183 + 397) ;while true do if (v107~=0) then else local v183=0;while true do if (v183==(1252 -(721 + 530))) then v107=1;break;end if ((1271 -(945 + 326))~=v183) then else local v344=0 -0 ;while true do if (v344==0) then for v404=1 + 0 ,v58 do local v405=0;local v406;local v407;local v408;while true do if (v405~=(701 -(271 + 429))) then else v408=nil;while true do if (v406~=(1 + 0)) then else if (v407==(1501 -(1408 + 92))) then v408=v21()~=(1975 -(1913 + 62)) ;elseif (v407==(2 + 0)) then v408=v24();elseif (v407==(1089 -(461 + 625))) then v408=v25();end v59[v404]=v408;break;end if (v406~=(1933 -(565 + 1368))) then else local v430=0;local v431;while true do if (v430==(1288 -(993 + 295))) then v431=0 + 0 ;while true do if (0==v431) then v407=v21();v408=nil;v431=1172 -(418 + 753) ;end if (v431==(1 + 0)) then v406=1 + 0 ;break;end end break;end end end end break;end if (v405==0) then v406=0 + 0 ;v407=nil;v405=1;end end end v57[1 + 2 ]=v21();v344=1 + 0 ;end if (v344~=(1 + 0)) then else v183=477 -(41 + 435) ;break;end end end end end if (v107==1) then for v218=530 -(406 + 123) ,v23() do local v219=1769 -(1749 + 20) ;local v220;local v221;local v222;while true do if ((1001 -(938 + 63))==v219) then v220=0 + 0 ;v221=nil;v219=1;end if (v219~=(1126 -(936 + 189))) then else v222=nil;while true do if (v220~=(1 + 0)) then else while true do if (v221~=(1322 -(1249 + 73))) then else v222=v21();if (v20(v222,1 + 0 ,1146 -(466 + 679) )==0) then local v422=0 -0 ;local v423;local v424;local v425;while true do if (1~=v422) then else v425={v22(),v22(),nil,nil};if (v423==(1900 -(106 + 1794))) then local v437=0;local v438;local v439;while true do if ((1 + 0)~=v437) then else while true do if (v438~=0) then else v439=0 + 0 ;while true do if (v439==(0 -0)) then v425[3 + 0 ]=v22();v425[14 -10 ]=v22();break;end end break;end end break;end if (v437==(0 -0)) then v438=0;v439=nil;v437=1;end end elseif (v423==(2 -1)) then v425[3]=v23();elseif (v423==2) then v425[117 -(4 + 110) ]=v23() -((586 -(57 + 527))^(36 -20)) ;elseif (v423~=(1430 -(41 + 1386))) then else local v450=103 -(17 + 86) ;local v451;local v452;while true do if (v450==(0 + 0)) then v451=0 -0 ;v452=nil;v450=1 -0 ;end if ((2 -1)~=v450) then else while true do if (v451==0) then v452=0;while true do if (v452==(166 -(122 + 44))) then v425[5 -2 ]=v23() -(2^16) ;v425[12 -8 ]=v22();break;end end break;end end break;end end end v422=613 -(602 + 9) ;end if ((3 + 0)==v422) then if (v20(v424,1 + 2 ,3)==(1 -0)) then v425[69 -(30 + 35) ]=v59[v425[3 + 1 ]];end v54[v218]=v425;break;end if ((947 -(245 + 702))==v422) then local v434=1257 -(1043 + 214) ;while true do if (v434~=0) then else v423=v20(v222,7 -5 ,1215 -(323 + 889) );v424=v20(v222,1902 -(260 + 1638) ,15 -9 );v434=581 -(361 + 219) ;end if ((321 -(53 + 267))==v434) then v422=1;break;end end end if (v422~=(3 -1)) then else local v435=0 -0 ;while true do if (v435==(1 + 0)) then v422=416 -(15 + 398) ;break;end if (v435~=(0 -0)) then else if (v20(v424,2 -1 ,1 + 0 )==(1691 -(1121 + 569))) then v425[984 -(18 + 964) ]=v59[v425[685 -(483 + 200) ]];end if (v20(v424,7 -5 ,2 + 0 )==(1 + 0)) then v425[3]=v59[v425[3]];end v435=851 -(20 + 830) ;end end end end end break;end end break;end if (v220~=0) then else local v409=0 -0 ;local v410;while true do if (v409==(0 -0)) then v410=0;while true do if (v410==(0 + 0)) then local v432=765 -(468 + 297) ;while true do if (v432~=1) then else v410=127 -(116 + 10) ;break;end if (v432==0) then v221=0 + 0 ;v222=nil;v432=739 -(542 + 196) ;end end end if (v410==1) then v220=1 -0 ;break;end end break;end end end end break;end end end v53=1 + 2 ;break;end end end if (v53==0) then local v108=0;while true do if (v108~=0) then else local v184=0 + 0 ;local v185;while true do if (v184~=0) then else v185=0 -0 ;while true do if (v185~=0) then else v54={};v55={};v185=1 + 0 ;end if (v185==1) then v108=2 -1 ;break;end end break;end end end if (v108~=(1 + 0)) then else v56={};v53=2 -1 ;break;end end end break;end if (v99==0) then local v106=0 + 0 ;while true do if (v106~=(1551 -(1126 + 425))) then else if (v53==(408 -(118 + 287))) then local v186=0;local v187;local v188;while true do if (v186~=(2 -1)) then else while true do if (v187==0) then v188=0 + 0 ;while true do if (v188~=(0 -0)) then else local v419=1121 -(118 + 1003) ;local v420;while true do if (v419~=(0 -0)) then else v420=377 -(142 + 235) ;while true do if (v420==(0 -0)) then local v436=0 + 0 ;while true do if (v436~=(0 -0)) then else for v443=1 + 0 ,v23() do v55[v443-(978 -(553 + 424)) ]=v28();end return v57;end end end end break;end end end end break;end end break;end if (v186~=(0 -0)) then else v187=163 -(92 + 71) ;v188=nil;v186=1 + 0 ;end end end if (v53==(1 -0)) then local v189=0;while true do if ((0 + 0)==v189) then local v345=0 + 0 ;while true do if (v345~=(1 + 0)) then else v189=1;break;end if (v345==(0 + 0)) then local v398=0 -0 ;while true do if (1==v398) then v345=1 + 0 ;break;end if (v398==(0 -0)) then v57={v54,v55,nil,v56};v58=v23();v398=1;end end end end end if (v189==1) then v59={};v53=1 + 1 ;break;end end end v106=4 -3 ;end if (v106~=(754 -(239 + 514))) then else v99=1;break;end end end end break;end end break;end end end break;end if (v52~=(2 -1)) then else local v93=0 + 0 ;while true do if (v93==(1 + 0)) then v52=2;break;end if (v93==(1329 -(797 + 532))) then v55=nil;v56=nil;v93=1;end end end if (v52~=(2 + 0)) then else local v94=0 + 0 ;while true do if (v94~=0) then else v57=nil;v58=nil;v94=2 -1 ;end if (v94~=1) then else v52=1205 -(373 + 829) ;break;end end end if (v52~=(731 -(476 + 255))) then else local v95=0;while true do if (v95==(1130 -(369 + 761))) then v53=0;v54=nil;v95=1887 -(927 + 959) ;end if (v95~=(1 + 0)) then else v52=1 -0 ;break;end end end end break;end if (v51~=0) then else v52=0 -0 ;v53=nil;v51=239 -(64 + 174) ;end end end local function v29(v60,v61,v62) local v63=0;local v64;local v65;local v66;while true do if (v63==1) then v66=v60[3];return function(...) local v77=v64;local v78=v65;local v79=v66;local v80=v27;local v81=1;local v82= -1;local v83={};local v84={...};local v85=v12("#",...) -1 ;local v86={};local v87={};for v91=0,v85 do if (v91>=v79) then v83[v91-v79 ]=v84[v91 + 1 ];else v87[v91]=v84[v91 + 1 ];end end local v88=(v85-v79) + 1 ;local v89;local v90;while true do local v92=0;while true do if (v92==0) then v89=v77[v81];v90=v89[1];v92=1;end if (1==v92) then if (v90<=41) then if (v90<=20) then if (v90<=9) then if (v90<=4) then if (v90<=1) then if (v90>0) then v87[v89[2]]=v87[v89[3]] -v87[v89[4]] ;else v81=v89[3];end elseif (v90<=2) then local v111=0;local v112;while true do if (v111==0) then v112=v89[2];v87[v112](v87[v112 + 1 ]);break;end end elseif (v90>3) then local v223=v78[v89[3]];local v224;local v225={};v224=v10({},{__index=function(v312,v313) local v314=v225[v313];return v314[1][v314[2]];end,__newindex=function(v315,v316,v317) local v318=0;local v319;while true do if (v318==0) then v319=v225[v316];v319[1][v319[2]]=v317;break;end end end});for v320=1,v89[4] do local v321=0;local v322;while true do if (v321==1) then if (v322[1]==65) then v225[v320-1 ]={v87,v322[3]};else v225[v320-1 ]={v61,v322[3]};end v86[ #v86 + 1 ]=v225;break;end if (v321==0) then v81=v81 + 1 ;v322=v77[v81];v321=1;end end end v87[v89[2]]=v29(v223,v224,v62);else v87[v89[2]]={};end elseif (v90<=6) then if (v90>5) then if (v87[v89[2]]~=v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end else for v190=v89[2],v89[3] do v87[v190]=nil;end end elseif (v90<=7) then if (v89[2]<v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90>8) then local v230=v89[2];local v231={};for v323=1, #v86 do local v324=v86[v323];for v346=0, #v324 do local v347=0;local v348;local v349;local v350;while true do if (v347==1) then v350=v348[2];if ((v349==v87) and (v350>=v230)) then v231[v350]=v349[v350];v348[1]=v231;end break;end if (v347==0) then v348=v324[v346];v349=v348[1];v347=1;end end end end else local v232=v89[2];local v233=v87[v89[3]];v87[v232 + 1 ]=v233;v87[v232]=v233[v89[4]];end elseif (v90<=14) then if (v90<=11) then if (v90==10) then v87[v89[2]]=v62[v89[3]];else v87[v89[2]]=v87[v89[3]][v87[v89[4]]];end elseif (v90<=12) then local v117=0;local v118;while true do if (v117==0) then v118=v89[2];v87[v118]=v87[v118](v13(v87,v118 + 1 ,v89[3]));break;end end elseif (v90==13) then v87[v89[2]]();else v87[v89[2]]=v87[v89[3]] + v89[4] ;end elseif (v90<=17) then if (v90<=15) then v87[v89[2]]=v61[v89[3]];elseif (v90==16) then local v238=0;local v239;local v240;while true do if (v238==0) then v239=v89[2];v240=v87[v239];v238=1;end if (v238==1) then for v383=v239 + 1 ,v89[3] do v7(v240,v87[v383]);end break;end end elseif (v89[2]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=18) then local v121=v78[v89[3]];local v122;local v123={};v122=v10({},{__index=function(v192,v193) local v194=v123[v193];return v194[1][v194[2]];end,__newindex=function(v195,v196,v197) local v198=0;local v199;while true do if (0==v198) then v199=v123[v196];v199[1][v199[2]]=v197;break;end end end});for v200=1,v89[4] do v81=v81 + 1 ;local v201=v77[v81];if (v201[1]==65) then v123[v200-1 ]={v87,v201[3]};else v123[v200-1 ]={v61,v201[3]};end v86[ #v86 + 1 ]=v123;end v87[v89[2]]=v29(v121,v122,v62);elseif (v90==19) then v87[v89[2]]=v87[v89[3]] + v89[4] ;else local v242=v89[2];v87[v242]=v87[v242](v13(v87,v242 + 1 ,v82));end elseif (v90<=30) then if (v90<=25) then if (v90<=22) then if (v90>21) then v87[v89[2]]=v61[v89[3]];else for v203=v89[2],v89[3] do v87[v203]=nil;end end elseif (v90<=23) then local v127=v89[2];local v128,v129=v80(v87[v127](v13(v87,v127 + 1 ,v89[3])));v82=(v129 + v127) -1 ;local v130=0;for v205=v127,v82 do v130=v130 + 1 ;v87[v205]=v128[v130];end elseif (v90>24) then local v244=v89[2];v87[v244]=v87[v244](v13(v87,v244 + 1 ,v82));elseif (v89[2]==v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=27) then if (v90>26) then v81=v89[3];else do return v87[v89[2]];end end elseif (v90<=28) then v87[v89[2]]={};elseif (v90==29) then if (v89[2]<v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end else v87[v89[2]]=v89[3];end elseif (v90<=35) then if (v90<=32) then if (v90>31) then v87[v89[2]]=v29(v78[v89[3]],nil,v62);else local v134=v87[v89[4]];if  not v134 then v81=v81 + 1 ;else v87[v89[2]]=v134;v81=v89[3];end end elseif (v90<=33) then v87[v89[2]]=v87[v89[3]][v87[v89[4]]];elseif (v90>34) then local v250=v89[2];local v251=v89[4];local v252=v250 + 2 ;local v253={v87[v250](v87[v250 + 1 ],v87[v252])};for v329=1,v251 do v87[v252 + v329 ]=v253[v329];end local v254=v253[1];if v254 then v87[v252]=v254;v81=v89[3];else v81=v81 + 1 ;end else local v255=v89[3];local v256=v87[v255];for v332=v255 + 1 ,v89[4] do v256=v256   .. v87[v332] ;end v87[v89[2]]=v256;end elseif (v90<=38) then if (v90<=36) then local v137=v89[2];do return v13(v87,v137,v137 + v89[3] );end elseif (v90>37) then if (v87[v89[2]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end else v87[v89[2]][v89[3]]=v87[v89[4]];end elseif (v90<=39) then if (v87[v89[2]]<v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90==40) then if v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end else local v261=v89[2];local v262,v263=v80(v87[v261](v13(v87,v261 + 1 ,v89[3])));v82=(v263 + v261) -1 ;local v264=0;for v333=v261,v82 do local v334=0;while true do if (v334==0) then v264=v264 + 1 ;v87[v333]=v262[v264];break;end end end end elseif (v90<=62) then if (v90<=51) then if (v90<=46) then if (v90<=43) then if (v90==42) then v87[v89[2]][v87[v89[3]]]=v87[v89[4]];else local v140=0;local v141;local v142;local v143;while true do if (v140==1) then v143=v89[3];for v360=1,v143 do v142[v360]=v87[v141 + v360 ];end break;end if (v140==0) then v141=v89[2];v142=v87[v141];v140=1;end end end elseif (v90<=44) then v87[v89[2]]=v87[v89[3]][v89[4]];elseif (v90>45) then v87[v89[2]]= #v87[v89[3]];else local v266=v89[2];local v267={v87[v266](v87[v266 + 1 ])};local v268=0;for v338=v266,v89[4] do local v339=0;while true do if (0==v339) then v268=v268 + 1 ;v87[v338]=v267[v268];break;end end end end elseif (v90<=48) then if (v90>47) then v87[v89[2]]=v87[v89[3]] -v87[v89[4]] ;elseif (v87[v89[2]]<v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=49) then local v147=v89[2];v87[v147]=v87[v147](v13(v87,v147 + 1 ,v89[3]));elseif (v90>50) then v87[v89[2]]=v29(v78[v89[3]],nil,v62);else v87[v89[2]][v89[3]]=v89[4];end elseif (v90<=56) then if (v90<=53) then if (v90>52) then v87[v89[2]][v89[3]]=v89[4];else local v151=v87[v89[4]];if  not v151 then v81=v81 + 1 ;else v87[v89[2]]=v151;v81=v89[3];end end elseif (v90<=54) then local v152=v89[3];local v153=v87[v152];for v208=v152 + 1 ,v89[4] do v153=v153   .. v87[v208] ;end v87[v89[2]]=v153;elseif (v90>55) then local v275=0;local v276;while true do if (v275==0) then v276=v89[2];v87[v276](v13(v87,v276 + 1 ,v89[3]));break;end end else v87[v89[2]]=v62[v89[3]];end elseif (v90<=59) then if (v90<=57) then if (v87[v89[2]]==v89[4]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90>58) then local v280=v89[2];v87[v280]=v87[v280](v87[v280 + 1 ]);else v87[v89[2]]();end elseif (v90<=60) then local v155=v89[2];local v156={v87[v155](v13(v87,v155 + 1 ,v82))};local v157=0;for v209=v155,v89[4] do v157=v157 + 1 ;v87[v209]=v156[v157];end elseif (v90==61) then local v282=v89[2];local v283=v87[v282];local v284=v89[3];for v340=1,v284 do v283[v340]=v87[v282 + v340 ];end else v87[v89[2]]=v87[v89[3]][v89[4]];end elseif (v90<=72) then if (v90<=67) then if (v90<=64) then if (v90>63) then local v158=v89[2];local v159=v87[v89[3]];v87[v158 + 1 ]=v159;v87[v158]=v159[v89[4]];else do return v87[v89[2]];end end elseif (v90<=65) then v87[v89[2]]=v87[v89[3]];elseif (v90>66) then local v287=v89[2];v87[v287]=v87[v287](v87[v287 + 1 ]);else local v289=0;local v290;local v291;local v292;local v293;while true do if (0==v289) then v290=v89[2];v291,v292=v80(v87[v290](v87[v290 + 1 ]));v289=1;end if (v289==1) then v82=(v292 + v290) -1 ;v293=0;v289=2;end if (v289==2) then for v388=v290,v82 do v293=v293 + 1 ;v87[v388]=v291[v293];end break;end end end elseif (v90<=69) then if (v90==68) then local v165=0;local v166;local v167;local v168;local v169;while true do if (v165==2) then for v363=v166,v82 do local v364=0;while true do if (v364==0) then v169=v169 + 1 ;v87[v363]=v167[v169];break;end end end break;end if (0==v165) then v166=v89[2];v167,v168=v80(v87[v166](v87[v166 + 1 ]));v165=1;end if (v165==1) then v82=(v168 + v166) -1 ;v169=0;v165=2;end end elseif (v87[v89[2]]~=v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[3];end elseif (v90<=70) then local v170=v89[2];local v171={};for v212=1, #v86 do local v213=0;local v214;while true do if (v213==0) then v214=v86[v212];for v371=0, #v214 do local v372=0;local v373;local v374;local v375;while true do if (0==v372) then v373=v214[v371];v374=v373[1];v372=1;end if (1==v372) then v375=v373[2];if ((v374==v87) and (v375>=v170)) then local v421=0;while true do if (v421==0) then v171[v375]=v374[v375];v373[1]=v171;break;end end end break;end end end break;end end end elseif (v90==71) then local v295=0;local v296;local v297;local v298;while true do if (v295==0) then v296=v89[2];v297={v87[v296](v13(v87,v296 + 1 ,v82))};v295=1;end if (v295==1) then v298=0;for v391=v296,v89[4] do v298=v298 + 1 ;v87[v391]=v297[v298];end break;end end else do return;end end elseif (v90<=77) then if (v90<=74) then if (v90>73) then v87[v89[2]]= #v87[v89[3]];else local v173=v89[2];v87[v173](v87[v173 + 1 ]);end elseif (v90<=75) then v87[v89[2]][v87[v89[3]]]=v87[v89[4]];elseif (v90==76) then v87[v89[2]][v89[3]]=v87[v89[4]];else do return;end end elseif (v90<=80) then if (v90<=78) then v87[v89[2]]=v89[3];elseif (v90==79) then local v301=0;local v302;while true do if (v301==0) then v302=v89[2];v87[v302](v13(v87,v302 + 1 ,v89[3]));break;end end else local v303=0;local v304;local v305;local v306;while true do if (v303==1) then v306=0;for v394=v304,v89[4] do v306=v306 + 1 ;v87[v394]=v305[v306];end break;end if (v303==0) then v304=v89[2];v305={v87[v304](v87[v304 + 1 ])};v303=1;end end end elseif (v90<=81) then local v178=v89[2];local v179=v89[4];local v180=v178 + 2 ;local v181={v87[v178](v87[v178 + 1 ],v87[v180])};for v215=1,v179 do v87[v180 + v215 ]=v181[v215];end local v182=v181[1];if v182 then v87[v180]=v182;v81=v89[3];else v81=v81 + 1 ;end elseif (v90==82) then v87[v89[2]]=v87[v89[3]];elseif v87[v89[2]] then v81=v81 + 1 ;else v81=v89[3];end v81=v81 + 1 ;break;end end end end;end if (v63==0) then v64=v60[1];v65=v60[2];v63=1;end end end return v29(v28(),{},v17)(...);end return vv9(),...);