--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v80=v2(v0(v30,16));if v19 then local v88=v5(v80,v19);v19=nil;return v88;else return v80;end end end);local function v20(v31,v32,v33) if v33 then local v81=0 + 0 ;local v82;while true do if (v81==(0 -(0 -0))) then v82=(v31/((1639 -(1523 + 114))^(v32-((3 -1) -1))))%(2^(((v33-(1 + 0)) -(v32-((1 -0) -0))) + 1)) ;return v82-(v82%(1066 -(68 + (1347 -(87 + 263))))) ;end end else local v83=0 -0 ;local v84;while true do if (v83==((799 -(67 + 113)) -(555 + 64))) then v84=(933 -(857 + 74))^(v32-((418 + 151) -(367 + 201))) ;return (((v31%(v84 + v84))>=v84) and (928 -(214 + 713))) or (0 + (957 -(892 + 65))) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (4 -2) );v18=v18 + 2 + 0 ;return (v36 * (1017 -761)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (5 -2) );v18=v18 + ((557 + 399) -(802 + 150)) ;return (v40 * (45169940 -28392724)) + (v39 * (66533 -(915 + 82))) + (v38 * (724 -468)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 -0 ;local v44=(v20(v42,1188 -(1069 + 118) ,45 -25 ) * (((1141 -(116 + 1022)) -(4 -3))^(6 + 26))) + v41 ;local v45=v20(v42,37 -16 ,31 + 0 + 0 );local v46=((v20(v42,823 -(368 + 423) )==(3 -2)) and  -(19 -(10 + 8))) or (3 -2) ;if (v45==(442 -(416 + (94 -68)))) then if (v44==(0 -0)) then return v46 * ((0 -0) + 0) ;else v45=1 -0 ;v43=438 -(145 + 293) ;end elseif (v45==2047) then return ((v44==0) and (v46 * ((431 -(44 + 386))/(1486 -(998 + 488))))) or (v46 * NaN) ;end return v8(v46,v45-(325 + (1557 -(814 + 45))) ) * (v43 + (v44/((2 + 0)^(824 -(201 + 571))))) ;end local function v25(v47) local v48;if  not v47 then v47=v23();if (v47==(0 -0)) then return "";end end v48=v3(v16,v18,(v18 + v47) -(1 + 0) );v18=v18 + v47 ;local v49={};for v64=1 + 0 , #v48 do v49[v64]=v2(v1(v3(v48,v64,v64)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=0;local v51;local v52;local v53;local v54;local v55;local v56;local v57;while true do if ((1 -0)~=v50) then else v53=nil;v54=nil;v50=2 -0 ;end if (v50==(1784 -(599 + 1185))) then v51=0;v52=nil;v50=1 + 0 ;end if (v50~=(2 + 0)) then else v55=nil;v56=nil;v50=3;end if (v50==3) then v57=nil;while true do if (v51==3) then local v93=574 -(507 + 67) ;while true do if ((1749 -(1013 + 736))~=v93) then else for v106=1 + 0 ,v23() do v53[v106-1 ]=v28();end return v55;end end end if ((0 -0)~=v51) then else local v94=0 -0 ;while true do if (v94==1) then v54={};v51=868 -(550 + 317) ;break;end if (v94~=0) then else v52={};v53={};v94=1 -0 ;end end end if (v51==(2 -0)) then for v97=2 -1 ,v56 do local v98=0;local v99;local v100;local v101;local v102;while true do if (v98==2) then while true do if (v99==0) then v100=285 -(134 + 151) ;v101=nil;v99=1666 -(970 + 695) ;end if ((1 -0)~=v99) then else v102=nil;while true do if (v100~=(1990 -(582 + 1408))) then else local v213=0 -0 ;local v214;while true do if (v213==(0 -0)) then v214=0;while true do if (v214==1) then v100=1;break;end if (v214==(0 -0)) then local v409=0;while true do if (v409==(1825 -(1195 + 629))) then v214=1 -0 ;break;end if (0~=v409) then else v101=v21();v102=nil;v409=1;end end end end break;end end end if (1==v100) then if (v101==1) then v102=v21()~=0 ;elseif (v101==(243 -(187 + 54))) then v102=v24();elseif (v101~=3) then else v102=v25();end v57[v97]=v102;break;end end break;end end break;end if (v98==1) then v101=nil;v102=nil;v98=2;end if (v98~=(780 -(162 + 618))) then else v99=0;v100=nil;v98=1;end end end v55[3]=v21();for v103=1,v23() do local v104=0;local v105;while true do if ((0 + 0)~=v104) then else v105=v21();if (v20(v105,1,1)~=(0 + 0)) then else local v108=0 -0 ;local v109;local v110;local v111;local v112;local v113;while true do if (v108==0) then v109=0;v110=nil;v108=1 -0 ;end if (v108~=(1 + 1)) then else v113=nil;while true do if (v109==1) then v112=nil;v113=nil;v109=1638 -(1373 + 263) ;end if (0==v109) then local v345=1000 -(451 + 549) ;local v346;while true do if (v345~=0) then else v346=0 + 0 ;while true do if (v346==0) then local v412=0;while true do if (v412==(1 -0)) then v346=1 -0 ;break;end if (v412==(1384 -(746 + 638))) then v110=0 + 0 ;v111=nil;v412=1;end end end if ((1 -0)==v346) then v109=342 -(218 + 123) ;break;end end break;end end end if (v109==(1583 -(1535 + 46))) then while true do if (v110==(3 + 0)) then if (v20(v112,1 + 2 ,3)==(561 -(306 + 254))) then v113[4]=v57[v113[4]];end v52[v103]=v113;break;end if (v110==0) then local v395=0 + 0 ;while true do if (v395==(0 -0)) then v111=v20(v105,1469 -(899 + 568) ,2 + 1 );v112=v20(v105,9 -5 ,609 -(268 + 335) );v395=291 -(60 + 230) ;end if (v395~=(573 -(426 + 146))) then else v110=1 + 0 ;break;end end end if (v110==(1458 -(282 + 1174))) then local v396=811 -(569 + 242) ;local v397;while true do if (v396~=0) then else v397=0 -0 ;while true do if (v397==1) then v110=1 + 2 ;break;end if (v397~=(1024 -(706 + 318))) then else local v420=0;local v421;while true do if (v420~=(1251 -(721 + 530))) then else v421=0;while true do if (v421~=(1272 -(945 + 326))) then else v397=1;break;end if (v421==(0 -0)) then local v426=0 + 0 ;while true do if (v426~=1) then else v421=701 -(271 + 429) ;break;end if (0~=v426) then else if (v20(v112,1,1)==(1 + 0)) then v113[2]=v57[v113[2]];end if (v20(v112,2,2)==(1501 -(1408 + 92))) then v113[3]=v57[v113[3]];end v426=1;end end end end break;end end end end break;end end end if (v110==(1087 -(461 + 625))) then local v398=1288 -(993 + 295) ;while true do if (v398==0) then local v413=0;while true do if (1==v413) then v398=1 + 0 ;break;end if (v413==(1171 -(418 + 753))) then v113={v22(),v22(),nil,nil};if (v111==0) then local v422=529 -(406 + 123) ;while true do if (v422==(1769 -(1749 + 20))) then v113[3]=v22();v113[4]=v22();break;end end elseif (v111==1) then v113[1 + 2 ]=v23();elseif (v111==(1324 -(1249 + 73))) then v113[2 + 1 ]=v23() -((1147 -(466 + 679))^(38 -22)) ;elseif (v111~=3) then else local v428=0 -0 ;while true do if (v428~=0) then else v113[1903 -(106 + 1794) ]=v23() -(2^16) ;v113[4]=v22();break;end end end v413=1 + 0 ;end end end if (1==v398) then v110=1 + 1 ;break;end end end end break;end end break;end if (v108==1) then local v178=0;while true do if (v178==(2 -1)) then v108=2;break;end if (v178~=(0 -0)) then else v111=nil;v112=nil;v178=115 -(4 + 110) ;end end end end end break;end end end v51=587 -(57 + 527) ;end if (v51==1) then local v96=0;while true do if ((1427 -(41 + 1386))==v96) then v55={v52,v53,nil,v54};v56=v23();v96=1;end if (v96==(167 -(122 + 44))) then v57={};v51=2;break;end end end end break;end end end local function v29(v58,v59,v60) local v61=v58[1];local v62=v58[2];local v63=v58[3];return function(...) local v66=v61;local v67=v62;local v68=v63;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v85=0,v74 do if (v85>=v68) then v72[v85-v68 ]=v73[v85 + 1 ];else v76[v85]=v73[v85 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do v78=v66[v70];v79=v78[1];if (v79<=44) then if (v79<=21) then if (v79<=10) then if (v79<=4) then if (v79<=1) then if (v79>0) then v76[v78[2]]=v76[v78[3]] -v76[v78[4]] ;else local v115=v78[2];v76[v115]=v76[v115](v13(v76,v115 + 1 ,v78[3]));end elseif (v79<=2) then v76[v78[2]]={};elseif (v79==3) then do return;end else local v216=v76[v78[4]];if  not v216 then v70=v70 + 1 ;else local v347=0;while true do if (v347==0) then v76[v78[2]]=v216;v70=v78[3];break;end end end end elseif (v79<=7) then if (v79<=5) then local v118=0;local v119;while true do if (v118==0) then v119=v78[2];do return v76[v119](v13(v76,v119 + 1 ,v78[3]));end break;end end elseif (v79==6) then v76[v78[2]]=v76[v78[3]] + v78[4] ;else v76[v78[2]]=v29(v67[v78[3]],nil,v60);end elseif (v79<=8) then v76[v78[2]]= #v76[v78[3]];elseif (v79==9) then local v219=0;local v220;local v221;local v222;while true do if (v219==1) then v222=v78[3];for v384=1,v222 do v221[v384]=v76[v220 + v384 ];end break;end if (0==v219) then v220=v78[2];v221=v76[v220];v219=1;end end else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79<=15) then if (v79<=12) then if (v79==11) then local v121=v76[v78[4]];if  not v121 then v70=v70 + 1 ;else v76[v78[2]]=v121;v70=v78[3];end elseif (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=13) then local v122=0;local v123;local v124;local v125;local v126;while true do if (v122==1) then v71=(v125 + v123) -1 ;v126=0;v122=2;end if (v122==2) then for v348=v123,v71 do v126=v126 + 1 ;v76[v348]=v124[v126];end break;end if (v122==0) then v123=v78[2];v124,v125=v69(v76[v123](v76[v123 + 1 ]));v122=1;end end elseif (v79>14) then local v228=v78[2];v76[v228](v13(v76,v228 + 1 ,v78[3]));else local v229=v78[2];local v230,v231=v69(v76[v229](v13(v76,v229 + 1 ,v78[3])));v71=(v231 + v229) -1 ;local v232=0;for v316=v229,v71 do v232=v232 + 1 ;v76[v316]=v230[v232];end end elseif (v79<=18) then if (v79<=16) then v76[v78[2]]= #v76[v78[3]];elseif (v79==17) then v76[v78[2]]=v60[v78[3]];elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=19) then local v128=v67[v78[3]];local v129;local v130={};v129=v10({},{__index=function(v179,v180) local v181=0;local v182;while true do if (v181==0) then v182=v130[v180];return v182[1][v182[2]];end end end,__newindex=function(v183,v184,v185) local v186=0;local v187;while true do if (v186==0) then v187=v130[v184];v187[1][v187[2]]=v185;break;end end end});for v188=1,v78[4] do local v189=0;local v190;while true do if (v189==0) then v70=v70 + 1 ;v190=v66[v70];v189=1;end if (1==v189) then if (v190[1]==84) then v130[v188-1 ]={v76,v190[3]};else v130[v188-1 ]={v59,v190[3]};end v75[ #v75 + 1 ]=v130;break;end end end v76[v78[2]]=v29(v128,v129,v60);elseif (v79==20) then v76[v78[2]]=v76[v78[3]];else v70=v78[3];end elseif (v79<=32) then if (v79<=26) then if (v79<=23) then if (v79==22) then local v132=v78[2];v76[v132](v13(v76,v132 + 1 ,v78[3]));else local v133=0;local v134;local v135;while true do if (v133==0) then v134=v78[2];v135={};v133=1;end if (v133==1) then for v357=1, #v75 do local v358=v75[v357];for v375=0, #v358 do local v376=v358[v375];local v377=v376[1];local v378=v376[2];if ((v377==v76) and (v378>=v134)) then v135[v378]=v377[v378];v376[1]=v135;end end end break;end end end elseif (v79<=24) then do return v76[v78[2]];end elseif (v79==25) then if  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v238=v78[2];local v239,v240=v69(v76[v238](v13(v76,v238 + 1 ,v78[3])));v71=(v240 + v238) -1 ;local v241=0;for v320=v238,v71 do v241=v241 + 1 ;v76[v320]=v239[v241];end end elseif (v79<=29) then if (v79<=27) then do return;end elseif (v79==28) then v76[v78[2]]={};else v76[v78[2]]=v78[3];end elseif (v79<=30) then local v136=v78[2];v76[v136](v76[v136 + 1 ]);elseif (v79==31) then local v245=0;local v246;local v247;while true do if (v245==0) then v246=v78[2];v247={};v245=1;end if (v245==1) then for v389=1, #v75 do local v390=v75[v389];for v404=0, #v390 do local v405=0;local v406;local v407;local v408;while true do if (v405==1) then v408=v406[2];if ((v407==v76) and (v408>=v246)) then v247[v408]=v407[v408];v406[1]=v247;end break;end if (v405==0) then v406=v390[v404];v407=v406[1];v405=1;end end end end break;end end elseif v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=38) then if (v79<=35) then if (v79<=33) then local v137=0;local v138;while true do if (v137==0) then v138=v78[2];do return v76[v138](v13(v76,v138 + 1 ,v78[3]));end break;end end elseif (v79==34) then v76[v78[2]][v78[3]]=v78[4];else v76[v78[2]]=v59[v78[3]];end elseif (v79<=36) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>37) then if (v76[v78[2]]~=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v78[3];end elseif (v79<=41) then if (v79<=39) then v76[v78[2]]=v76[v78[3]][v78[4]];elseif (v79==40) then v70=v78[3];else local v256=v78[2];local v257=v78[4];local v258=v256 + 2 ;local v259={v76[v256](v76[v256 + 1 ],v76[v258])};for v324=1,v257 do v76[v258 + v324 ]=v259[v324];end local v260=v259[1];if v260 then v76[v258]=v260;v70=v78[3];else v70=v70 + 1 ;end end elseif (v79<=42) then local v141=v78[2];local v142=v78[4];local v143=v141 + 2 ;local v144={v76[v141](v76[v141 + 1 ],v76[v143])};for v191=1,v142 do v76[v143 + v191 ]=v144[v191];end local v145=v144[1];if v145 then v76[v143]=v145;v70=v78[3];else v70=v70 + 1 ;end elseif (v79==43) then local v263=v78[3];local v264=v76[v263];for v327=v263 + 1 ,v78[4] do v264=v264   .. v76[v327] ;end v76[v78[2]]=v264;elseif (v76[v78[2]]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=66) then if (v79<=55) then if (v79<=49) then if (v79<=46) then if (v79>45) then v76[v78[2]]=v60[v78[3]];else local v148=v78[2];local v149=v76[v78[3]];v76[v148 + 1 ]=v149;v76[v148]=v149[v78[4]];end elseif (v79<=47) then v76[v78[2]]=v76[v78[3]][v76[v78[4]]];elseif (v79==48) then local v266=v78[2];v76[v266]=v76[v266](v76[v266 + 1 ]);else local v268=v78[2];local v269={v76[v268](v13(v76,v268 + 1 ,v71))};local v270=0;for v328=v268,v78[4] do v270=v270 + 1 ;v76[v328]=v269[v270];end end elseif (v79<=52) then if (v79<=50) then if (v78[2]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==51) then v76[v78[2]][v78[3]]=v76[v78[4]];else v76[v78[2]][v76[v78[3]]]=v76[v78[4]];end elseif (v79<=53) then v76[v78[2]]=v29(v67[v78[3]],nil,v60);elseif (v79>54) then local v276=v78[2];local v277={v76[v276](v13(v76,v276 + 1 ,v71))};local v278=0;for v331=v276,v78[4] do v278=v278 + 1 ;v76[v331]=v277[v278];end else local v279=0;local v280;while true do if (v279==0) then v280=v78[2];v76[v280]=v76[v280](v13(v76,v280 + 1 ,v78[3]));break;end end end elseif (v79<=60) then if (v79<=57) then if (v79==56) then for v194=v78[2],v78[3] do v76[v194]=nil;end else v76[v78[2]]=v76[v78[3]] -v76[v78[4]] ;end elseif (v79<=58) then local v157=0;local v158;local v159;while true do if (v157==1) then for v365=v158 + 1 ,v78[3] do v7(v159,v76[v365]);end break;end if (0==v157) then v158=v78[2];v159=v76[v158];v157=1;end end elseif (v79==59) then v76[v78[2]]();else local v281=0;local v282;local v283;local v284;local v285;while true do if (v281==2) then for v391=v282,v71 do v285=v285 + 1 ;v76[v391]=v283[v285];end break;end if (v281==1) then v71=(v284 + v282) -1 ;v285=0;v281=2;end if (v281==0) then v282=v78[2];v283,v284=v69(v76[v282](v76[v282 + 1 ]));v281=1;end end end elseif (v79<=63) then if (v79<=61) then v76[v78[2]]=v76[v78[3]] + v78[4] ;elseif (v79==62) then local v286=v78[2];local v287={v76[v286](v76[v286 + 1 ])};local v288=0;for v336=v286,v78[4] do v288=v288 + 1 ;v76[v336]=v287[v288];end elseif (v78[2]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=64) then local v161=v78[2];v76[v161]=v76[v161](v13(v76,v161 + 1 ,v71));elseif (v79>65) then local v289=v78[2];do return v13(v76,v289,v71);end else local v290=0;local v291;while true do if (v290==0) then v291=v78[2];do return v13(v76,v291,v291 + v78[3] );end break;end end end elseif (v79<=77) then if (v79<=71) then if (v79<=68) then if (v79==67) then local v163=v78[2];do return v13(v76,v163,v71);end elseif (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=69) then local v164=v67[v78[3]];local v165;local v166={};v165=v10({},{__index=function(v196,v197) local v198=0;local v199;while true do if (0==v198) then v199=v166[v197];return v199[1][v199[2]];end end end,__newindex=function(v200,v201,v202) local v203=v166[v201];v203[1][v203[2]]=v202;end});for v205=1,v78[4] do v70=v70 + 1 ;local v206=v66[v70];if (v206[1]==84) then v166[v205-1 ]={v76,v206[3]};else v166[v205-1 ]={v59,v206[3]};end v75[ #v75 + 1 ]=v166;end v76[v78[2]]=v29(v164,v165,v60);elseif (v79==70) then local v293=v78[2];local v294={v76[v293](v76[v293 + 1 ])};local v295=0;for v341=v293,v78[4] do v295=v295 + 1 ;v76[v341]=v294[v295];end else do return v76[v78[2]];end end elseif (v79<=74) then if (v79<=72) then local v168=v78[2];v76[v168]=v76[v168](v13(v76,v168 + 1 ,v71));elseif (v79>73) then v76[v78[2]]=v59[v78[3]];else local v298=v78[3];local v299=v76[v298];for v344=v298 + 1 ,v78[4] do v299=v299   .. v76[v344] ;end v76[v78[2]]=v299;end elseif (v79<=75) then for v208=v78[2],v78[3] do v76[v208]=nil;end elseif (v79==76) then v76[v78[2]][v78[3]]=v78[4];else local v303=v78[2];local v304=v76[v78[3]];v76[v303 + 1 ]=v304;v76[v303]=v304[v78[4]];end elseif (v79<=83) then if (v79<=80) then if (v79<=78) then local v170=v78[2];local v171=v76[v170];local v172=v78[3];for v210=1,v172 do v171[v210]=v76[v170 + v210 ];end elseif (v79==79) then if  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v76[v78[2]]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=81) then v76[v78[2]]=v76[v78[3]][v76[v78[4]]];elseif (v79>82) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]][v76[v78[3]]]=v76[v78[4]];end elseif (v79<=86) then if (v79<=84) then v76[v78[2]]=v76[v78[3]];elseif (v79==85) then if (v76[v78[2]]~=v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v310=v78[2];v76[v310]=v76[v310](v76[v310 + 1 ]);end elseif (v79<=87) then local v177=v78[2];v76[v177](v76[v177 + 1 ]);elseif (v79==88) then v76[v78[2]]();else v76[v78[2]][v78[3]]=v76[v78[4]];end v70=v70 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);